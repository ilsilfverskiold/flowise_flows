{
  "name": "fetch_connected_keywords",
  "description": "Retrieve connected keywords for a specified keyword during a specific period.  Unless you are looking for trending keywords connected to another keyword for a specific period, it is good to use the longer period such as quarterly and monthly to get out enough data. ",
  "color": "linear-gradient(rgb(228,52,8), rgb(116,224,102))",
  "iconSrc": "",
  "schema": "[{\"id\":0,\"property\":\"search\",\"description\":\"use this field to perform a broader search in the text field. Example: \\\"AWS\\\"\",\"type\":\"string\",\"required\":true},{\"id\":1,\"property\":\"period\",\"description\":\"The period for which you want to fetch connected keywords. Accepted values are weekly, monthly, quarterly, or yearly. Example: \\\"quarterly\\\"\",\"type\":\"string\",\"required\":true},{\"id\":2,\"property\":\"sort\",\"description\":\"Sort order of the results. It can be \\\"top\\\", \\\"trending\\\" (default). Example: \\\"trending\\\"\",\"type\":\"string\",\"required\":false},{\"id\":3,\"property\":\"limit\",\"description\":\"Limit the number of connected keywords returned. The default is 40, but you can expand it up to 2000. Example: 100\",\"type\":\"number\",\"required\":false}]",
  "func": "const fetch = require('node-fetch');\n\nconst apiUrl = 'https://public.api.safron.io/v2/connected-keywords';\n\n    const periods = ['yearly', 'quarterly', 'monthly', 'weekly', 'daily'];\n    \n    function getNextPeriod(currentPeriod) {\n        const index = periods.indexOf(currentPeriod);\n        return index >= 0 && index < periods.length - 1 ? periods[index + 1] : null;\n    }\n\n    let queryParams = `search=${encodeURIComponent($search)}`;\n\n    if ($sort) queryParams += `&sort=${$sort}`;\n    if ($limit) queryParams += `&limit=${$limit}`;\n\n    let currentPeriod = $period;\n    \n    while (currentPeriod) {\n        let url = `${apiUrl}?${queryParams}&period=${currentPeriod}`;\n\n        try {\n            console.log(`Attempting with period: ${currentPeriod}`);\n            const result = await makeApiRequest(url);\n            return JSON.stringify(result); \n\n        } catch (error) {\n            console.warn(`Request failed for period: ${currentPeriod}. Retrying...`);\n            currentPeriod = getNextPeriod(currentPeriod);\n\n            if (!currentPeriod) {\n                console.error('All period attempts failed:', error);\n                return `Error: ${error.message}`;\n            }\n        }\n    }\n\n    async function makeApiRequest(url) {\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    \n        if (!response.ok) {\n            throw new Error('Failed to fetch connected keywords');\n        }\n    \n        return await response.json();\n    }"
}